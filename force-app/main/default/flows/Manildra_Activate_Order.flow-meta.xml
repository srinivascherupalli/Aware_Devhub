<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Account_Review</name>
        <label>Account Review</label>
        <locationX>1186</locationX>
        <locationY>727</locationY>
        <actionName>activateOrderAction</actionName>
        <actionType>activateOrderAction</actionType>
        <faultConnector>
            <targetReference>Show_Error</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderLifeCycleType</name>
            <value>
                <elementReference>unmanagedOrder</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderStatus</name>
            <value>
                <stringValue>Accounts Review</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Completed_Order</name>
        <label>Completed Order</label>
        <locationX>638</locationX>
        <locationY>625</locationY>
        <actionName>activateOrderAction</actionName>
        <actionType>activateOrderAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderLifeCycleType</name>
            <value>
                <elementReference>unmanagedOrder</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderStatus</name>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>On_Hold</name>
        <label>On Hold</label>
        <locationX>280</locationX>
        <locationY>475</locationY>
        <actionName>activateOrderAction</actionName>
        <actionType>activateOrderAction</actionType>
        <faultConnector>
            <targetReference>Show_Error</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderLifeCycleType</name>
            <value>
                <elementReference>unmanagedOrder</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderStatus</name>
            <value>
                <stringValue>On Hold</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Calls the updateCheckoutState invocable action and sets the value of the next state field for the current checkout session object. The action is only used in asynchronous subflows.</description>
        <name>Update_Checkout_Session_State</name>
        <label>Update Checkout Session State</label>
        <locationX>151</locationX>
        <locationY>250</locationY>
        <actionName>updateCheckoutSessionStateAction</actionName>
        <actionType>updateCheckoutSessionStateAction</actionType>
        <connector>
            <targetReference>Get_Buyer_Id</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Show_Error</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>checkoutSessionId</name>
            <value>
                <elementReference>checkoutSession.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>expCurrentState</name>
            <value>
                <elementReference>currentState</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>nextState</name>
            <value>
                <elementReference>nextState</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <assignments>
        <name>Assign_AccountsReceivable</name>
        <label>Assign AccountsReceivable</label>
        <locationX>892</locationX>
        <locationY>421</locationY>
        <assignmentItems>
            <assignToReference>Get_Order.AccountReview__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_AccountsReceivable</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>managedOrder</name>
        <dataType>String</dataType>
        <value>
            <stringValue>MANAGED</stringValue>
        </value>
    </constants>
    <constants>
        <name>unmanagedOrder</name>
        <dataType>String</dataType>
        <value>
            <stringValue>UNMANAGED</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Decision_Order_Payment</name>
        <label>Decision Order Payment</label>
        <locationX>570</locationX>
        <locationY>412</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Credit_less_then_Available</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>Get_Buyer_Id.AvailableCredit</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Get_Order.TotalAmount</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account_Record.Terms_Code__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>45</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account_Record.AccountCreditStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Credit Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account_Record.AccountCreditStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Stop Supply</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Order.PoNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_AccountsReceivable</targetReference>
            </connector>
            <label>Credit less then Available</label>
        </rules>
        <rules>
            <name>Credit_is_more_then_Available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Buyer_Id.AvailableCredit</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Get_Order.TotalAmount</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Order.PoNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>On_Hold</targetReference>
            </connector>
            <label>Credit is more then Available</label>
        </rules>
        <rules>
            <name>Credit_Card_Payment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Order.PoNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Completed_Order</targetReference>
            </connector>
            <label>Credit Card Payment</label>
        </rules>
    </decisions>
    <interviewLabel>Manildra Activate Order {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Manildra Activate Order</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>CheckoutFlow</processType>
    <recordLookups>
        <name>Get_Account_Record</name>
        <label>Get Account Record</label>
        <locationX>577</locationX>
        <locationY>250</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Order_Payment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Buyer_Id.BuyerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Buyer_Id</name>
        <label>Get Buyer Id</label>
        <locationX>305</locationX>
        <locationY>250</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Order</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BuyerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSession.Order.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BuyerAccount</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Order</name>
        <label>Get Order</label>
        <locationX>451</locationX>
        <locationY>250</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Account_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSession.OrderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_AccountsReceivable</name>
        <label>Update AccountsReceivable</label>
        <locationX>1186</locationX>
        <locationY>420</locationY>
        <connector>
            <targetReference>Account_Review</targetReference>
        </connector>
        <inputReference>Get_Order</inputReference>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <start>
        <locationX>24</locationX>
        <locationY>40</locationY>
        <connector>
            <targetReference>Update_Checkout_Session_State</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Show_Error</name>
        <label>Show Error</label>
        <locationX>590</locationX>
        <locationY>974</locationY>
        <flowName>sfdc_checkout__Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>cartId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>checkoutSession</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>CartCheckoutSession</objectType>
    </variables>
    <variables>
        <name>closeCart</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>currentState</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>nextState</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>PaymentType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
